# Generated by Django 5.2.1 on 2025-08-12 18:00

from django.db import migrations, models
import django.db.models.deletion

def populate_classification_image_field(apps, schema_editor):
    """
    Populate the new image field in ClassificationResult based on the detection field
    """
    ClassificationResult = apps.get_model('classification', 'ClassificationResult')
    DetectionResult = apps.get_model('detection', 'DetectionResult')
    
    # For each classification result, set the image field based on its detection
    for classification in ClassificationResult.objects.all():
        if classification.detection:
            classification.image = classification.detection.image
            classification.save()

def reverse_populate_classification_image_field(apps, schema_editor):
    """
    Reverse operation - clear the image field
    """
    ClassificationResult = apps.get_model('classification', 'ClassificationResult')
    for classification in ClassificationResult.objects.all():
        classification.image = None
        classification.save()

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_uploadedimage_processed_image'),
        ('classification', '0001_initial'),
    ]

    operations = [
        # Add the new image field (allowing null temporarily)
        migrations.AddField(
            model_name='classificationresult',
            name='image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.uploadedimage'),
        ),
        # Populate the new field with data
        migrations.RunPython(populate_classification_image_field, reverse_populate_classification_image_field),
        # Make the field non-nullable
        migrations.AlterField(
            model_name='classificationresult',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.uploadedimage'),
        ),
        # Remove the old detection field
        migrations.RemoveField(
            model_name='classificationresult',
            name='detection',
        ),
    ]